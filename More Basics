##for loop that prints all integers from 0 to 99, separated by a tab
for num in range(0, 100):
    print(num, end="\t")
    
##for loop that prints all characters in s, separated by a tab
s = "abcdefghijklmnopqrstuvwxyz"
for char in s:
    print(char, end="\t")

##for loop that prints the same as right above, but this time using the index of s
for char in range(len(s)):
    print(s[char], end="\t")

##for loop that prints the same as right above except that the letters at odd index number positions are printed in upper case, while those at even index number positions are printed as they are
for char in range(len(s)):
    if char % 2 == 1:
        print(s[char].upper(), end="\t")
    else:
        print(s[char], end="\t")

##for loop that prints "NAME is SEX and aged AGE." for all tuples in employees, separated by a new line, where NAME is the first value in each tuple, SEX the second, and AGE the thrid
employees = [("Alice", 30, "female"), ("Bob", 25, "male"), ("Tom", 34, "male")]
for name, age, sex in employees:
    print("{} is {} and aged {}".format(name, sex, age))

##for loop that prints "ABBREVIATION is the abbreviation for FULLNAME." for all key-value pairs in states, separated by a new line, where ABBREVIATION is the key in states and FULLNAME the key
states = {"IA": "Iowa", "IL": "Illinois", "MN": "Minnesota", "NE": "Nebraska", "WI": "Wisconsin"}
for key, value in states.items():
    print("{} is the abbreviation for {}".format(key, value))

##for loop that prints all names in names in uppercase, separated by a new line
names = ["Alice", "Bob", "Mary", "Sam", "Sarah", "Tom"]
for name in names:
    print(name.upper())

##for loop that prints the first two characters of each name in names in lowercase, separated by a new line
for name in names:
    print(name.lower()[:2])

##for loop that only prints the names in names with a length of 3, separated by a new line
for name in names:
    if len(name) == 3:
        print(name)

##for loop that only prints the names in names that end with either m or y, separated by a new line
for name in names:
    if (name.endswith("m") or (name.endswith("y"))):
        print(name)

##for loop that prints the pairs of two items that are at the same position in men and women, respectively
men = ["Bob", "Sam", "Tom"]
women = ["Alice", "Mary", "Sarah"]

for name1, name2 in list(zip(men, women)):
    print(name1 + " & " + name2)
    
##nested for loop that prints all possible pairs of the two names from men and women, respectively
for m in men:
    for w in women:
        print(m + " & " + w)

##for loop that adds all numbers in l one after another. It should print the final sum after the for loop
l = range(1, 1000, 2)

total = 0
for item in l:
    total += item
print(total)

##for loop that adds all numbers in l one after another, printing the current sum for every 10th number. It should print the final sum after the for loop
total = 0
for item in range(len(l)):
    total += l[item]
    if item % 10 == 9:
        print(total, item)
        
print(total)

##for loop that calculates the product of the first 10 numbers in l. It should print the final product after the for loop
total = 1
for item in l[0:10]:
    total *= item
print(total)
